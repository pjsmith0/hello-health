plugins {
    id 'java'
    id 'io.quarkus'
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    implementation enforcedPlatform("${quarkusPlatformGroupId}:${quarkusPlatformArtifactId}:${quarkusPlatformVersion}")
    //implementation 'io.quarkiverse.qute.web:quarkus-qute-web'

    implementation 'io.quarkiverse.web-bundler:quarkus-web-bundler:1.5.0.CR6'
    implementation 'io.quarkus:quarkus-rest'
    implementation 'io.quarkus:quarkus-rest-qute'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-reactive-routes'

    implementation 'io.quarkus:quarkus-hibernate-validator'
    implementation 'io.quarkus:quarkus-rest-jackson'
    implementation 'io.quarkus:quarkus-config-yaml'
    implementation 'io.quarkus:quarkus-jacoco'
    implementation 'io.quarkus:quarkus-hibernate-orm'
    implementation 'io.quarkus:quarkus-jdbc-postgresql'
    implementation 'io.quarkus:quarkus-arc'

    implementation 'org.mapstruct:mapstruct:1.5.5.Final'

    implementation 'io.quarkus:quarkus-smallrye-openapi'

    implementation 'io.rest-assured:json-schema-validator:5.5.0'


    compileOnly("org.webjars:jquery:3.7.1")
    compileOnly("org.webjars.npm:jquery-ui:1.13.3")

    compileOnly 'org.mvnpm:bootstrap:5.2.3'
    compileOnly 'org.mvnpm:bootstrap-icons:1.10.5'

    annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    testImplementation 'io.quarkus:quarkus-junit5'
    testImplementation 'io.rest-assured:rest-assured'

    compileOnly 'org.projectlombok:lombok:1.18.32'
    annotationProcessor 'org.projectlombok:lombok:1.18.32'

    testCompileOnly 'org.projectlombok:lombok:1.18.32'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.32'


    annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
}

group 'pjs'
version '1.0.0-SNAPSHOT'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

test {
    systemProperty "java.util.logging.manager", "org.jboss.logmanager.LogManager"
}
compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-parameters'
}

compileTestJava {
    options.encoding = 'UTF-8'
}
